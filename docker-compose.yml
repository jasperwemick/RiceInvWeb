version: '1.1'

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    image: express-server
    container_name: node-server
    # command: node server.js
    volumes:
      - ./backend/:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - "4000:4000"
    env_file: ./backend/.env
    # environment:
    #   - NODE_ENV=development
    networks:
      - app-network
  frontend:
    # build:
    #   context: ./frontend
    #   dockerfile: Dockerfile
    image: client-react-app
    container_name: frontend
    # command: npm start
    # volumes:
    #   - ./frontend/:/usr/app
    #   - /usr/app/node_modules
    # depends_on:
    #   - backend
    # env_file: ./frontend/.env
    networks:
      - app-network

  nginx:
    container_name: nginx
    restart: unless-stopped
    image: nginx
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
      - /etc/letsencrypt/ssl/riceinvitational.org/fullchain.pem:/etc/nginx/ssl/fullchain.pem
      - /etc/letsencrypt/ssl/riceinvitational.org/privkey.pem:/etc/nginx/ssl/privkey.pem
    networks:
      - app-network
  
  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    command: certonly --webroot -w /var/www/certbot --keep-until-expiring --email jasper.emick@gmail.com -d riceinvitational.org --agree-tos
    networks:
      - app-network

networks:
    app-network:
        driver: bridge

volumes:
    data-volume:
    node_modules:
    web-root:
      driver: local