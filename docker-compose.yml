version: '1.1'

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    image: express-server
    container_name: backend
    # command: node server.js
    volumes:
      - ./backend/:/usr/src/app
      - /usr/src/app/node_modules
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    ports:
      - 4000:4000
    env_file: ./backend/.env
    # environment:
    #   - NODE_ENV=development
    networks:
      - app-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    image: react-client
    container_name: frontend
    # command: npm start
    volumes:
      - ./frontend/:/src/app
      - /src/app/node_modules
    depends_on:
      - backend
    env_file: ./frontend/.env
    ports:
      - 3000:3000
    networks:
      - app-network

  nginx:
    container_name: nginx
    restart: unless-stopped
    image: nginx:1.15-alpine
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
    networks:
      - app-network
    
  #   # networks:
  #   #   - app-network
  
  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    # command: certonly --webroot -w /var/www/certbot --keep-until-expiring --email jasper.emick@gmail.com -d riceinvitational.org --agree-tos
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    # networks:
    #   - app-network

networks:
    app-network:
        driver: bridge

volumes:
    data-volume:
    node_modules:
    web-root:
      driver: local